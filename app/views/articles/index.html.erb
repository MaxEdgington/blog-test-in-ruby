

## CODE BELOW COMMENTS




# However, we will take this one step further by using the link_to helper. The link_to helper renders a link with its first argument as the link's text and its second argument as the link's destination. If we pass a model object as the second argument, link_to will call the appropriate path helper to convert the object to a path. 



# <h1>Articles</h1>

# <ul>
#   <% @articles.each do |article| %>
#     <li>
#       <%= link_to article.title, article %>
#     </li>
#   <% end %>
# </ul>





# <h1>Articles</h1>

# <ul>
#   <% @articles.each do |article| %>
#     <li>
#       <a href="<%= article_path(article) %>">
#         <%= article.title %>
#       </a>
#     </li>
#   <% end %>
# </ul>

## The resources method also sets up URL and path helper methods that we can use to keep our code from depending on a specific route configuration. The values in the "Prefix" column above plus a suffix of _url or _path form the names of these helpers

# previous code
##<h1>Articles</h1>

# <ul>
#   <% @articles.each do |article| %>
#     <li>
#       <%= article.title %>
#     </li>
#   <% end %>
# </ul>


# We can now create an article by visiting http://localhost:3000/articles/new. To finish up, let's link to that page from the bottom of app/views/articles/index.html.erb:

<h1>Articles</h1>

<ul>
  <% @articles.each do |article| %>
    <li>
      <%= link_to article.title, article %>
    </li>
  <% end %>
</ul>

<%= link_to "New Article", new_article_path %>

